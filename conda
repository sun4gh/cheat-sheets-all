CONDA 4.6 CHEAT SHEET: https://conda.io/projects/conda/en/latest/user-guide/cheatsheet.html

        BASIC
$ conda --version
conda 4.10.1
$ conda info
        gives interesting info on the specific environment, conda version, python version

        UPDATING CONDA ITSELF so that all conda commands work their best
        update conda if you're in the base environment:
$ conda update conda
        or if not in the base environment:
$ conda update -n base -c defaults conda

        WHERE ANACONDA STORES ENV?
 
$ conda info --envs
# conda environments:
#
base                  *  /anaconda3
newenv                   /anaconda3/envs/newenv

        CLONE ENV
$ conda create --name myclone --clone myenv
        where "myenv" is an existing environment and "myclone" is the new environment to be created 
 
        PRISTINE ENV
$ conda create --name basic397 python=3.9.7

        __ with Django
$ conda create --name newdev python=3.9.7 django=3.2.7

                or by cloning env 
$ conda create --name djangoDev --clone basic397
$ conda install -n djangoDev django=3.2.7

                and if the default channels don't have what you need, find which channel does (see below)        
$ conda install -c conda-forge -n djangoDev django=3.2.7

        __ with django, pandas, pytest, letting conda figure appropriate versions
$ conda create -n newappdev python django pytest
        then , add pyscaffold available via conda-forge
$ conda install -c conda-forge -n newappdev pyscaffold      
        
        NEW BASE ENV
        Common modules: python, pandas (will install numpy), pytest, django, nbconvert, scikit-learn, 
                        matplotlib,
        Then using conda-forge
$ conda install -c conda-forge jupyter_contrib_nbextensions

        WORKING WITH ENVs YOU ALREADY HAVE
        To activate in a terminal session:
$ conda activate the_env

        To see the packages of the current env (and their version)  :
$ conda list

        To see the history of updates in the environment:
$ conda list --revisions

        Update ALL (in this environment) to most-recent-but-compatible version:
$ conda update --all

        List revisions of this environment
$ conda list --revisions
        more on the specific environment at CONDA_ROOT/envs/ENV_NAME/conda-meta

        Revert to previous revision
$ conda install --revision N
        (where N is the revision number from the list operation)

        INSTALL SPECIFIC PACKAGE:
        - consider cloning a current env first so you can work in a new env; also remember --revisions flag (see above)
        - in AN check if it's already installed; or use the uninstalled choice in the drop down to find it easily

        Option:
        In terminal activate the environment you want to use.

        Search for the package, e.g. librosa:
$ conda search librosa
        if that fails, user top search field in anaconda.org to find the pacakage, then look at the instructions on that page, e.g.
$ conda install -c conda-forge librosa 

        SEARCH FOR MODULE IN MY EXISTING ENVIRONMENTS
        Sometimes you want to know if you've used a module in any of your environments.
$ conda search geopy --envs
        will return all environments of this user that have the module "geopy"  
        but note that "$ conda search cv2 --envs" might fail because you need "$ conda search opencv --envs" instead.
        
        
        REMOVE an environment
$ conda remove -n basic397 --all
        or,
$ conda env remove --name basic397

CONDA and JUPYTER NOTEBOOK
        1. Move to the directory of the ipynb_to_launch:
$ cd ~/git/.../<directory of ipynb_to_launch>
        2. Review your options of environments to use:
$ conda info --envs
        3. Then, activate the env and confirm it has the correct version of the modules you nee
$ conda activate the_env
$ conda list
        4. Launch jupyter 
$ jupyter notebook ipynb_to_launch

OTHER RESOURCES:
https://docs.anaconda.com/anaconda/user-guide/getting-started/
https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-pkgs.html
https://jakevdp.github.io/blog/2016/08/25/conda-myths-and-misconceptions/       
